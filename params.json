{"name":"Dash-video","tagline":"A web component for playing back responsive dash video","body":"# dash-video\r\n\r\nA web component for playing back demo videos\r\n\r\n- support for auto play on all platforms\r\n- non fullscreen videos on the iphone\r\n- dash, adaptive video support (webm, vp9, ogg vorbiss)\r\n- html5 video support (any format supported by the browser)\r\n- support for media queries on the video sources\r\n\r\nKnown problems:\r\n\r\n- no controls\r\n- no audio on iOS\r\n- the pain in the ass of encoding videos\r\n- dash is slow on android devices (disable playback using media queries)\r\n\r\n\r\nMade possible by \r\n\r\n- [Broadway](https://github.com/mbebenita/Broadway)\r\n- [Shaka Player](https://github.com/google/shaka-player)\r\n\r\nThanks for the great work!\r\n\r\n\r\n\r\n## License\r\n\r\nHave a look at https://opensource.org/licenses for details\r\n\r\n- Code Commited by joinbox staff: MIT\r\n- For the iOS part (h.264 decoder), please have a look at the licence agreements of the mpeg-la,\r\n  it's probably free for personal and non-commercial use. Use on your own risk!\r\n- Broadway: 3-clause BSD & Apache 2.0 license\r\n- Shaka Player: Apache License 2.0\r\n- Sample movies: Big Buck Bunny (c) copyright 2008, Blender Foundation / [www.bigbuckbunny.org](www.bigbuckbunny.org)\r\n\r\n\r\n## installation\r\n\r\n    bower i dash-video\r\n\r\n\r\n\r\n\r\n## Using the component\r\n\r\nYou need to include the following lines in the head section of your html file\r\n\r\n    <script src=\"bower_components/webcomponentsjs/webcomponents.min.js\"></script>\r\n    <link rel=\"import\"  href=\"bower_components/src/dash-video.html\">\r\n\r\n\r\nSetting up your first video using the dash-video tag\r\n\r\n    <dash-video autoplay loop style=\"width:1280px; height:720px;\" id=\"dash-video-player\">\r\n        <!-- dash video -->\r\n        <source type=\"application/dash+xml\"     media=\"screen and (min-width:1005px)\"   src=\"http://whaever.127.0.0.1.xip.io:80/long_manifest.mpd\" />\r\n\r\n        <!-- normal html5 video -->\r\n        <source type=\"video/mp4\"                media=\"screen and (min-width:1025px)\"   src=\"video/input_1080p.mp4\" />\r\n\r\n        <!-- special video for ios, not the data-crapple attribute -->\r\n        <source type=\"video/mp4\"                media=\"screen and (min-width:125px)\"    src=\"video/crapple_hi.mp4\" data-crapple/>\r\n    </dash-video>\r\n\r\nThat's it!\r\n\r\nIf you have trouble loading video files from localhost while developing you may start the node server that set the correct cors headers:\r\n\r\n    npm i\r\n    node server.js\r\n\r\nThe server listens on port 8000, you can now navigate to (localhost:8000)[http://whatever.127.0.0.1.xip.io:8000/]\r\n\r\n\r\n\r\n## API\r\n\r\nThe api currently supports only two methods. Create an issue if you need more functionality!\r\n\r\n\r\n### play() method\r\n\r\nplays / resumes playback\r\n\r\n    document.querySelector('#dash-video-player').play();\r\n\r\n\r\n### pause() method\r\n\r\npauses playback\r\n\r\n    document.querySelector('#dash-video-player').pause();\r\n\r\n\r\n\r\n\r\n\r\n\r\n## Encoding Videos\r\n\r\nThose are instructions for ubuntu 15.10. It's a pain in the ass!\r\n\r\n\r\n### Compiling ffmpeg and dependecies\r\n\r\nYou have to compile an up to date version of ffmpeg in order to create dash and apple compatible video files.\r\n\r\n\r\nfirst install required tools\r\n\r\n    sudo apt-get install cmake make g++ git-core gcc yasm\r\n\r\n\r\nthen install dependencies\r\n\r\n    sudo apt-get install libx264-dev\r\n\r\n\r\nget the required source files from https://www.xiph.org/downloads/ and compile them\r\n\r\nogg\r\n\r\n    wget http://downloads.xiph.org/releases/ogg/libogg-1.3.2.tar.gz\r\n    tar xzvf libogg-1.3.2.tar.gz\r\n    cd libogg-1.3.2\r\n    ./configure\r\n    make\r\n    sudo make install\r\n\r\nvorbis\r\n\r\n    wget http://downloads.xiph.org/releases/vorbis/libvorbis-1.3.5.tar.gz\r\n    tar xzvf libvorbis-1.3.5.tar.gz\r\n    cd libvorbis-1.3.5\r\n    ./configure\r\n    make\r\n    sudo make install\r\n\r\nlibvpx\r\n\r\n    git clone https://chromium.googlesource.com/webm/libvpx\r\n    cd libvpx\r\n    ./configure\r\n    make\r\n    sudo make install\r\n\r\nffmpeg\r\n\r\n    git clone git://source.ffmpeg.org/ffmpeg.git\r\n    cd ffmpeg\r\n    # maybe: cmake\r\n    ./configure --enable-libvpx --enable-libvorbis --enable-gpl --enable-libx264\r\n    make\r\n    sudo make install\r\n\r\n\r\nIf i forgot something please file an issue!\r\n\r\n\r\n\r\n### MP4 video \r\n\r\n    ffmpeg -i input_720.webm -c:v libx264 -s 1280x720 -b:v 1500k -f mp4 -metadata title=\"My Cool Video\" encoder=\"ffmpeg\" -c:a copy -movflags +faststart video_720p_500k.mp4\r\n\r\n\r\n### Video for Crapple devices\r\n\r\n\r\n    ffmpeg -y -i input3_720p.mp4 -r 30000/1001 -b:a 2M -bt 4M -vcodec libx264 -pass 1 -coder 0 -bf 0 -flags -loop -wpredp 0 -an crapple_hi.mp4\r\n\r\n\r\n### Dash Video\r\n\r\nSee [DASH & VP9](http://wiki.webmproject.org/adaptive-streaming/instructions-to-playback-adaptive-webm-using-dash) for a short explanation!\r\n\r\n\r\n    VIDEO_TITLE=\"My Cool Video\"\r\n\r\n\r\n    # DASH VP9\r\n    VP9_DASH_PARAMS=\"-tile-columns 4 -frame-parallel 1\"\r\n\r\n\r\n    # create videos in different qualities\r\n    ffmpeg -i input.mp4 -c:v libvpx-vp9 -s 160x90 -threads 4 -b:v 250k -keyint_min 150 -g 60 ${VP9_DASH_PARAMS} -an -metadata title=${VIDEO_TITLE} -metadata encoder=\"ffmpeg\" -r 30 -f webm -dash 1 long_video_90p_250k.webm\r\n    ffmpeg -i input.mp4 -c:v libvpx-vp9 -s 320x180 -threads 4 -b:v 500k -keyint_min 150 -g 60 ${VP9_DASH_PARAMS} -an -metadata title=${VIDEO_TITLE} -metadata encoder=\"ffmpeg\" -r 30 -f webm -dash 1 long_video_180p_500k.webm\r\n    ffmpeg -i input.mp4 -c:v libvpx-vp9 -s 640x360 -threads 4 -b:v 750k -keyint_min 150 -g 60 ${VP9_DASH_PARAMS} -an -metadata title=${VIDEO_TITLE} -metadata encoder=\"ffmpeg\" -r 30 -f webm -dash 1 long_video_360p_750k.webm\r\n    ffmpeg -i input.mp4 -c:v libvpx-vp9 -s 640x360 -threads 4 -b:v 1000k -keyint_min 150 -g 60 ${VP9_DASH_PARAMS} -an -metadata title=${VIDEO_TITLE} -metadata encoder=\"ffmpeg\" -r 30 -f webm -dash 1 long_video_360p_1000k.webm\r\n    ffmpeg -i input.mp4 -c:v libvpx-vp9 -s 1280x720 -threads 4 -b:v 1500k -keyint_min 150 -g 60 ${VP9_DASH_PARAMS} -an -metadata title=${VIDEO_TITLE} -metadata encoder=\"ffmpeg\" -r 30 -f webm -dash 1 long_video_720p_500k.webm\r\n\r\n    # audio track\r\n    ffmpeg -i input.mp4 -c:a libvorbis -b:a 128k -vn -r 30 -f webm -dash 1 long_audio_128k.webm\r\n\r\n\r\n    # set cue points\r\n    ./bin/sample_muxer -i long_video_90p_250k.webm -o long_video_90p_250k_cued.webm\r\n    ./bin/sample_muxer -i long_video_180p_500k.webm -o long_video_180p_500k_cued.webm\r\n    ./bin/sample_muxer -i long_video_360p_750k.webm -o long_video_360p_750k_cued.webm\r\n    ./bin/sample_muxer -i long_video_360p_1000k.webm -o long_video_360p_1000k_cued.webm\r\n    ./bin/sample_muxer -i long_video_720p_500k.webm -o long_video_720p_500k_cued.webm\r\n\r\n    # for the audio too\r\n    ffmpeg -i long_audio_128k.webm -vn -acodec libvorbis -ab 128k -dash 1 long_audio_128k_cued.webm\r\n\r\n\r\n    # create dash manifest\r\n    ffmpeg \\\r\n     -analyzeduration 2147483647 -probesize 2147483647 \\\r\n     -f webm_dash_manifest -i long_video_90p_250k_cued.webm \\\r\n     -f webm_dash_manifest -i long_video_180p_500k_cued.webm \\\r\n     -f webm_dash_manifest -i long_video_360p_750k_cued.webm \\\r\n     -f webm_dash_manifest -i long_video_360p_1000k_cued.webm \\\r\n     -f webm_dash_manifest -i long_video_720p_500k_cued.webm \\\r\n     -f webm_dash_manifest -i long_audio_128k_cued.webm \\\r\n     -c copy -map 0 -map 1 -map 2 -map 3 -map 4 -map 5 \\\r\n     -f webm_dash_manifest \\\r\n     -adaptation_sets \"id=0,streams=0,1,2,3,4 id=1,streams=5\" \\\r\n     long_manifest.mpd\r\n\r\n\r\n## Links\r\n\r\n- [DASH & VP9](http://wiki.webmproject.org/adaptive-streaming/instructions-to-playback-adaptive-webm-using-dash)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}